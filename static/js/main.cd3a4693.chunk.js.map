{"version":3,"sources":["components/AuthForm.js","components/RegForm.js","components/AddNoteForm.js","components/NoteList.js","components/DescNote.js","components/App.js","reportWebVitals.js","index.js"],"names":["AuthForm","props","className","htmlFor","type","id","placeholder","autoComplete","onChange","onFieldChange","value","onClick","onFormSubmit","onRegClick","RegForm","onAcountFormSubmit","AddNoteForm","onFormChange","onNoteFormClick","onNewNote","ItemList","timeConverter","date","time","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","list","Object","values","map","note","title","onNoteDelete","content","DescNote","useState","setList","noteTitle","noteContent","form","setForm","addNoteForm","setAddNoteForm","userId","firebase","auth","currentUser","uid","db","database","handleNoteFormClick","useEffect","ref","child","on","snapshot","val","console","log","remove","event","target","preventDefault","getTime","set","App","email","username","password","loggedIn","login","setLogin","reg","setReg","handleRegClick","handleFieldChange","signInWithEmailAndPassword","then","response","catch","error","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd3a4693.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function AuthForm(props) {\n\n  return (\n    <div className=\"login_block\">\n      <h2 className=\"page_heading\">Добро пожаловать!</h2>\n      <form>\n        <div className=\"form_group\">\n          <label htmlFor=\"email\" >Email</label>\n          <input\n            className=\"input_control\"\n            type=\"text\"\n            id=\"email\"\n            placeholder=\"Электронная почта\"\n            autoComplete=\"off\"\n            onChange={props.onFieldChange}\n          />\n        </div>\n        <div className=\"form_group\">\n          <label htmlFor=\"password\">Пароль</label>\n          <input\n            className=\"input_control\"\n            type=\"password\"\n            id=\"password\"\n            placeholder=\"Пароль\"\n            autoComplete=\"off\"\n            onChange={props.onFieldChange}\n          />\n        </div>\n        <div className=\"form_group_submit\">\n          <input\n            type=\"submit\"\n            value=\"Войти\"\n            onClick={props.onFormSubmit} />\n          <input \n            type=\"button\"\n            value=\"Создать новый аккаунт\"\n            onClick={props.onRegClick} />\n        </div>\n      </form>\n    </div>\n  )\n}","import React from \"react\";\n\nexport default function RegForm(props) {\n\n  return (\n    <div className=\"login_block\">\n      <h2 className=\"page_heading\">Создать новый аккаунт</h2>\n      <form>\n        <div className=\"form_group\">\n          <label htmlFor=\"email\" >Email</label>\n          <input\n            className=\"input_control\"\n            type=\"text\"\n            id=\"email\"\n            placeholder=\"Электронная почта\"\n            autoComplete=\"off\"\n            onChange={props.onFieldChange}\n          />\n        </div>\n        <div className=\"form_group\">\n          <label htmlFor=\"username\" >Имя</label>\n          <input\n            className=\"input_control\"\n            type=\"text\"\n            id=\"username\"\n            placeholder=\"Имя\"\n            autoComplete=\"off\"\n            onChange={props.onFieldChange}\n          />\n        </div>\n        <div className=\"form_group\">\n          <label htmlFor=\"password\">Пароль</label>\n          <input\n            className=\"input_control\"\n            type=\"password\"\n            id=\"password\"\n            placeholder=\"Пароль\"\n            autoComplete=\"off\"\n            onChange={props.onFieldChange}\n          />\n        </div>\n        <div className=\"form_group_submit\">\n          <input\n            type=\"submit\"\n            value=\"Создать\"\n            onClick={props.onAcountFormSubmit} />\n          <input\n            type=\"button\"\n            value=\"Назад\"\n            onClick={props.onRegClick} />\n        </div>\n      </form>\n    </div>\n  )\n}","import React from \"react\";\nimport \"../css/AddNoteForm.css\"\n\nexport default function AddNoteForm(props) {\n\n  return (\n    <div>\n      <form className=\"new_note\">\n        <div className=\"new_note_head\">\n          <input\n            type=\"text\"\n            id=\"noteTitle\"\n            className=\"new_note_title\"\n            placeholder=\"Заголовок\"\n            autoComplete=\"off\"\n            onChange={props.onFormChange}\n          />\n          <input\n            type=\"button\"\n            onClick={props.onNoteFormClick}\n            className=\"btn-delete\"\n            value=\"✖\" />\n        </div>\n        <div className=\"new_note_body\">\n          <textarea\n            type=\"text\"\n            id=\"noteContent\"\n            placeholder=\"Текст...\"\n            autoComplete=\"off\"\n            onChange={props.onFormChange}\n          />\n          <input\n            type=\"submit\"\n            placeholder=\"Enter value\"\n            className=\"new_note_submit\"\n            autoComplete=\"off\"\n            onClick={props.onNewNote}\n            value=\"➤\"\n          />\n        </div>\n      </form>\n    </div>\n  )\n}","import React from \"react\";\nimport \"../css/NoteList.css\"\n\nexport default function ItemList(props) {\n\n  function timeConverter(date) {\n    let time = new Date(date);\n    let year = time.getFullYear()\n    let month = ((time.getMonth() + 1) < 10) ? '0' + (time.getMonth() + 1) : (time.getMonth() + 1);\n    let day = time.getDate();\n    let hours = time.getHours();\n    let minutes = (time.getMinutes() < 10) ? '0' + time.getMinutes() : time.getMinutes();\n    let formattedTime = day + '.' + month + '.' + year + '  ' + hours + ':' + minutes;\n    return formattedTime\n  }\n\n  // Получаем заметки из БД\n  if (props.list) \n  {return (\n      <ul className=\"note_list_wrapper\">\n        {Object.values(props.list).map(note => (\n          <li className=\"note_item\" key={note.title}>\n            <div className=\"note_head\">\n              <h2>{note.title}</h2>\n              <input\n                type=\"button\"\n                onClick={() => props.onNoteDelete(note.date)}\n                className=\"btn-delete\"\n                value=\"✖\" />\n            </div>\n            <div className=\"note_body\">\n              <p className=\"note_content\">{note.content}</p>\n              <p className=\"note_date\">{timeConverter(note.date)}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    )\n  }\n  return (\n    <div className=\"note_list_welcome\">\n      <p>Добро пожаловать в приложение по созданию заметок с использованием <span>Firebase Database</span>. Чтобы создать новую заметку, нажмите на кнопку <span>\"Создать заметку\"</span></p>\n    </div>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport AddNoteForm from \"./AddNoteForm\"\nimport NoteList from \"./NoteList\"\nimport \"../css/DescNote.css\"\n\nexport default function DescNote() {\n  const [list, setList] = useState({})\n  const [form, setForm] = useState({\n    noteTitle: '',\n    noteContent: '',\n  })\n  const [addNoteForm, setAddNoteForm] = useState(false);\n  const userId = firebase.auth().currentUser.uid;\n  const db = firebase.database();\n\n  useEffect(() => {\n    db.ref().child(\"users\").child(userId).child(\"notes\").on('value', (snapshot) => {\n      setList(snapshot.val())\n    })\n    return () => {\n      console.log(\"уборка\")\n    }\n  }, [])\n\n  function handleNoteFormClick() {\n    setAddNoteForm(!addNoteForm);\n  }\n\n  // Отправляем данные в БД\n  function addNote(event) {\n    event.preventDefault();\n    const { noteTitle, noteContent } = form;\n    const date = new Date().getTime();\n    db.ref('users/' + userId + '/notes/' + date).set({\n      'title': noteTitle,\n      'content': noteContent,\n      'date': date,\n    });\n    setAddNoteForm(!addNoteForm)\n  }\n\n  function deleteNote(date) {\n    db.ref('users/' + userId + '/notes/' + date).remove()\n  }\n\n\n  // Форма отправки данных\n  function handleFormChange(event) {\n    setForm({ ...form, [event.target.id]: event.target.value })\n  }\n\n  return (\n    <div className=\"notes_wrapper\">\n      <header className=\"header_wrapper\">\n        <p className=\"header_title\">Список заметок</p>\n      </header>\n      <main className=\"note_body_wrapper\">\n        <NoteList onNoteDelete={deleteNote} list={list} />\n      </main>\n      <footer className=\"footer_wrapper\">\n        <input\n          type=\"button\"\n          onClick={handleNoteFormClick}\n          value=\"Создать заметку\" />\n      </footer>\n      { addNoteForm === true && \n      <div className=\"add_note_wrapper\">\n        <AddNoteForm onFormChange={handleFormChange} onNewNote={addNote} onNoteFormClick={handleNoteFormClick} />\n      </div>\n      }\n    </div>\n  )\n}","import React, { useState } from \"react\";\nimport '../css/App.css';\nimport AuthForm from \"./AuthForm.js\";\nimport RegForm from \"./RegForm.js\";\nimport DescNote from \"./DescNote\"\nimport firebase from \"firebase\";\n\nexport default function App() {\n  const [login, setLogin] = useState({\n    email: '',\n    username: '',\n    password: '',\n    loggedIn: false\n  });\n  const [reg, setReg] = useState(false);\n\n  function handleRegClick() {\n    setReg(!reg);\n  }\n\n  // Аутентификация пользователя\n  function signinFormSubmit(event) {\n    event.preventDefault();\n    const { email, password } = login;\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(response =>\n        setLogin({ ...login, loggedIn: true }),\n      )\n      .catch(error => console.log(error));\n  }\n\n  function createNewAccount(event) {\n    event.preventDefault();\n    const { email, username, password } = login;\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then(event => {\n        const userId = firebase.auth().currentUser.uid\n        firebase.database().ref('users/' + userId + '/info').set({\n          'email': email,\n          'username': username,\n        })\n        setLogin({ ...login, loggedIn: true })\n      }\n      )\n      .catch(error => console.log(error));\n  }\n\n  // Заполнение формы входа\n  function handleFieldChange(event) {\n    setLogin({ ...login, [event.target.id]: event.target.value })\n\n  }\n\n  if (login.loggedIn) {\n    return <DescNote />\n  }\n\n  if (reg !== true) {\n    return <AuthForm onFormSubmit={signinFormSubmit} onFieldChange={handleFieldChange} onRegClick={handleRegClick} />\n  };\n  return <RegForm onAcountFormSubmit={createNewAccount} onFieldChange={handleFieldChange} onRegClick={handleRegClick} />\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBKdCTrz1PTIrNNF32kJwVA4wV1cQYO9_0\",\n  authDomain: \"tal-s-notes.firebaseapp.com\",\n  databaseURL: \"https://tal-s-notes-default-rtdb.firebaseio.com\",\n  projectId: \"tal-s-notes\",\n  storageBucket: \"tal-s-notes.appspot.com\",\n  messagingSenderId: \"364673748069\",\n  appId: \"1:364673748069:web:5aeac9003202acfeffca8c\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}